// <auto-generated />
using System;
using Assetify.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Assetify.Migrations
{
    [DbContext(typeof(AssetifyContext))]
    partial class AssetifyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Assetify.Models.Address", b =>
                {
                    b.Property<int>("AddressID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Building")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Full")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPublic")
                        .HasColumnType("bit");

                    b.Property<int>("Latitude")
                        .HasColumnType("int");

                    b.Property<int>("Longitude")
                        .HasColumnType("int");

                    b.Property<string>("Neighborhood")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AddressID");

                    b.ToTable("Addresses");
                });

            modelBuilder.Entity("Assetify.Models.Asset", b =>
                {
                    b.Property<int>("AssetID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AddressID")
                        .HasColumnType("int");

                    b.Property<int>("BalconySize")
                        .HasColumnType("int");

                    b.Property<int>("Condition")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EntryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("EstimatedPrice")
                        .HasColumnType("int");

                    b.Property<int>("Floor")
                        .HasColumnType("int");

                    b.Property<int>("Furnished")
                        .HasColumnType("int");

                    b.Property<int>("GardenSize")
                        .HasColumnType("int");

                    b.Property<bool>("IsAccessible")
                        .HasColumnType("bit");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAircondition")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBalcony")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBars")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCommercial")
                        .HasColumnType("bit");

                    b.Property<bool>("IsElevator")
                        .HasColumnType("bit");

                    b.Property<bool>("IsForSell")
                        .HasColumnType("bit");

                    b.Property<bool>("IsImmediate")
                        .HasColumnType("bit");

                    b.Property<bool>("IsKosherBoiler")
                        .HasColumnType("bit");

                    b.Property<bool>("IsKosherKitchen")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMamad")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNearBeach")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNearLightTrainStation")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNearTrainStation")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOnPillars")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPandorDoors")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRealtyCommission")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRenovated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRoomates")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStorage")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTerrace")
                        .HasColumnType("bit");

                    b.Property<int>("NumOfParking")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("RemovedReason")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rooms")
                        .HasColumnType("float");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.Property<int>("TotalFloor")
                        .HasColumnType("int");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("AssetID");

                    b.HasIndex("AddressID");

                    b.ToTable("Assets");
                });

            modelBuilder.Entity("Assetify.Models.AssetImage", b =>
                {
                    b.Property<int>("AssetImageID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssetID")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Updated")
                        .HasColumnType("bit");

                    b.HasKey("AssetImageID");

                    b.HasIndex("AssetID");

                    b.ToTable("Images");
                });

            modelBuilder.Entity("Assetify.Models.AssetOrientation", b =>
                {
                    b.Property<int>("AssetOrientationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AssetID")
                        .HasColumnType("int");

                    b.Property<int>("Orientation")
                        .HasColumnType("int");

                    b.HasKey("AssetOrientationID");

                    b.HasIndex("AssetID");

                    b.ToTable("Orientations");
                });

            modelBuilder.Entity("Assetify.Models.Search", b =>
                {
                    b.Property<int>("SearchID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FurnishedIn")
                        .HasColumnType("int");

                    b.Property<bool>("IsAccessible")
                        .HasColumnType("bit");

                    b.Property<bool>("IsAircondition")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBalcony")
                        .HasColumnType("bit");

                    b.Property<bool>("IsBars")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCommercial")
                        .HasColumnType("bit");

                    b.Property<bool>("IsElevator")
                        .HasColumnType("bit");

                    b.Property<bool>("IsForSell")
                        .HasColumnType("bit");

                    b.Property<bool>("IsImmediate")
                        .HasColumnType("bit");

                    b.Property<bool>("IsKosherBoiler")
                        .HasColumnType("bit");

                    b.Property<bool>("IsKosherKitchen")
                        .HasColumnType("bit");

                    b.Property<bool>("IsMamad")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNearBeach")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNearLightTrainStation")
                        .HasColumnType("bit");

                    b.Property<bool>("IsNearTrainStation")
                        .HasColumnType("bit");

                    b.Property<bool>("IsOnPillars")
                        .HasColumnType("bit");

                    b.Property<bool>("IsPandorDoors")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRealtyCommission")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRenovated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsRoomates")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStorage")
                        .HasColumnType("bit");

                    b.Property<bool>("IsTerrace")
                        .HasColumnType("bit");

                    b.Property<int>("MaxFloor")
                        .HasColumnType("int");

                    b.Property<int>("MaxGardenSize")
                        .HasColumnType("int");

                    b.Property<int>("MaxPrice")
                        .HasColumnType("int");

                    b.Property<int>("MaxRooms")
                        .HasColumnType("int");

                    b.Property<int>("MaxSize")
                        .HasColumnType("int");

                    b.Property<int>("MaxTotalFloor")
                        .HasColumnType("int");

                    b.Property<DateTime>("MinEntryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("MinFloor")
                        .HasColumnType("int");

                    b.Property<int>("MinGardenSize")
                        .HasColumnType("int");

                    b.Property<int>("MinPrice")
                        .HasColumnType("int");

                    b.Property<int>("MinRooms")
                        .HasColumnType("int");

                    b.Property<int>("MinSize")
                        .HasColumnType("int");

                    b.Property<int>("MinTotalFloor")
                        .HasColumnType("int");

                    b.Property<string>("Neighborhoods")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Orientations")
                        .HasColumnType("int");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TypeIdIn")
                        .HasColumnType("int");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("SearchID");

                    b.HasIndex("UserID");

                    b.ToTable("Searches");
                });

            modelBuilder.Entity("Assetify.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVerified")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastSeenFavorite")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("LastSeenMessages")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProfileImgPath")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Assetify.Models.UserAsset", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Action")
                        .HasColumnType("int");

                    b.Property<DateTime>("ActionTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("AssetID")
                        .HasColumnType("int");

                    b.Property<bool>("IsSeen")
                        .HasColumnType("bit");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AssetID");

                    b.HasIndex("UserID");

                    b.ToTable("UserAsset");
                });

            modelBuilder.Entity("Assetify.Models.Asset", b =>
                {
                    b.HasOne("Assetify.Models.Address", "Address")
                        .WithMany()
                        .HasForeignKey("AddressID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Assetify.Models.AssetImage", b =>
                {
                    b.HasOne("Assetify.Models.Asset", null)
                        .WithMany("Images")
                        .HasForeignKey("AssetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Assetify.Models.AssetOrientation", b =>
                {
                    b.HasOne("Assetify.Models.Asset", null)
                        .WithMany("Orientations")
                        .HasForeignKey("AssetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Assetify.Models.Search", b =>
                {
                    b.HasOne("Assetify.Models.User", null)
                        .WithMany("SearchHistory")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Assetify.Models.UserAsset", b =>
                {
                    b.HasOne("Assetify.Models.Asset", "Asset")
                        .WithMany("Users")
                        .HasForeignKey("AssetID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assetify.Models.User", "User")
                        .WithMany("Assets")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
